package com.ahom.hrms.serviceimpl;import com.ahom.hrms.Repository.EmployeeRepository;import com.ahom.hrms.Repository.TerminationRepository;import com.ahom.hrms.entities.Employee;import com.ahom.hrms.entities.Termination;import com.ahom.hrms.service.TerminationService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.mail.SimpleMailMessage;import org.springframework.mail.javamail.JavaMailSender;import org.springframework.stereotype.Service;import java.util.List;@Servicepublic class TerminationServiceImpl implements TerminationService{    @Autowired    TerminationRepository terminationRepository;    @Autowired     EmployeeRepository employeeRepository;    @Autowired    JavaMailSender mailSender;    @Value("${mail.from}")    private String fromEmail; // Set from email address in application.properties file    @Override    public Termination save(Termination termination) {        Termination termination1=terminationRepository.findByEmployeeId(termination.getEmployeeId());        if (termination1==null) {            Employee employee = employeeRepository.getByUserName(termination.getUserName());            if (employee != null) {                SimpleMailMessage messageToEmployee = new SimpleMailMessage();                messageToEmployee.setFrom(fromEmail);                messageToEmployee.setTo(employee.getUsername());                messageToEmployee.setSubject("Termination of Employment!!!");                messageToEmployee.setText(termination.getDescription());                mailSender.send(messageToEmployee);                System.out.println(messageToEmployee);                terminationRepository.save(termination);                return termination;            } else throw new RuntimeException("No employee");        }else throw new RuntimeException("Employee " + termination.getUserName() +" Already terminated");    }    @Override    public List<Termination> getAll() {        return terminationRepository.findAll();    }    @Override    public Termination update(Termination termination, int id) {        return null;    }    @Override    public Object delete(int id) {        return null;    }}