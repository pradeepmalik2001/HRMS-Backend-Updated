package com.ahom.hrms.serviceimpl;import com.ahom.hrms.Repository.ApplyForWfhRepository;import com.ahom.hrms.Repository.NotificationRepository;import com.ahom.hrms.entities.ApplyForWfh;import com.ahom.hrms.entities.Notification;import com.ahom.hrms.entities.Notification1;import com.ahom.hrms.service.ApplyForWfhService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import javax.validation.Valid;import java.util.List;@Servicepublic class ApplyForWfhServiceImpl  implements ApplyForWfhService {    @Autowired    ApplyForWfhRepository applyForWfhRepository ;    @Override    public List<ApplyForWfh> getAll()    {        List<ApplyForWfh> applyForWfhs=applyForWfhRepository.findAll();        return applyForWfhs;    }    @Autowired    private NotificationRepository notificationRepository;    @Override    public ApplyForWfh save(@Valid ApplyForWfh applyForWfh) {        Notification notification=new Notification();        notification.setMessage("New WFH request ");        notificationRepository.save(notification);        return applyForWfhRepository.save(applyForWfh);    }    @Override    public Object delete(int id) {         applyForWfhRepository.deleteById(id);        return null;    }    @Override    public ApplyForWfh updateStatus(ApplyForWfh applyForWfh, int id)    {        ApplyForWfh applyForWfh1=applyForWfhRepository.findById(id).orElse(null);        if(applyForWfh1!=null)        {            Notification1 notification1=new Notification1();            if(applyForWfh.getStatus().equals("1"))            {                applyForWfh1.setStatus(applyForWfh.getStatus());                notification1.setEmployeeId(applyForWfh1.getEmployeeId());                notification1.setMessage("Your WFH request has Approved");                applyForWfhRepository.save(applyForWfh1);            }            if(applyForWfh.getStatus().equals("2"))            {                applyForWfh1.setStatus(applyForWfh.getStatus());                notification1.setEmployeeId(applyForWfh1.getEmployeeId());                notification1.setMessage("Your WFH request has Declined");                applyForWfhRepository.save(applyForWfh1);            }        }        return applyForWfh;    }    @Override    public ApplyForWfh update(ApplyForWfh applyForWfh, String employeeId) {        ApplyForWfh applyForWfh1=applyForWfhRepository.findByEmployeeId(employeeId);        if (employeeId!=null){            ApplyForWfh applyForWfh2=new ApplyForWfh();            applyForWfh2.setId(applyForWfh1.getId());            applyForWfh2.setDescription(applyForWfh.getDescription());            applyForWfh2.setStatus(applyForWfh.getStatus());            applyForWfh2.setName(applyForWfh.getName());            applyForWfh2.setEmployeeId(applyForWfh.getEmployeeId());            applyForWfh2.setDate(applyForWfh.getDate());            applyForWfhRepository.save(applyForWfh2);        }        return applyForWfh;    }    @Override    public ApplyForWfh getByEmployeeId(String employeeId) {        return applyForWfhRepository.findByEmployeeId(employeeId);    }}